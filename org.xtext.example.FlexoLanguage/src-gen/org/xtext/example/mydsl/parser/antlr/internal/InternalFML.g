/*
* generated by Xtext
*/
grammar InternalFML;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.FMLGrammarAccess;

}

@parser::members {

 	private FMLGrammarAccess grammarAccess;
 	
    public InternalFMLParser(TokenStream input, FMLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "ViewDef";	
   	}
   	
   	@Override
   	protected FMLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleViewDef
entryRuleViewDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getViewDefRule()); }
	 iv_ruleViewDef=ruleViewDef 
	 { $current=$iv_ruleViewDef.current; } 
	 EOF 
;

// Rule ViewDef
ruleViewDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ViewDefinition' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getViewDefAccess().getViewDefinitionKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getViewDefAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getViewDefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='uri' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getViewDefAccess().getUriKeyword_2());
    }
)+(	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getViewDefAccess().getEqualsSignKeyword_3());
    }
)+(
(
		lv_uri_4_0=RULE_URISTRING
		{
			newLeafNode(lv_uri_4_0, grammarAccess.getViewDefAccess().getUriURISTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getViewDefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"uri",
        		lv_uri_4_0, 
        		"URISTRING");
	    }

)
)	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getViewDefAccess().getLeftCurlyBracketKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getViewDefAccess().getElementsVirtualModelParserRuleCall_6_0()); 
	    }
		lv_elements_6_0=ruleVirtualModel		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getViewDefRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_6_0, 
        		"VirtualModel");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getViewDefAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleVirtualModel
entryRuleVirtualModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVirtualModelRule()); }
	 iv_ruleVirtualModel=ruleVirtualModel 
	 { $current=$iv_ruleVirtualModel.current; } 
	 EOF 
;

// Rule VirtualModel
ruleVirtualModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='VirtualModel' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVirtualModelAccess().getVirtualModelKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getVirtualModelAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVirtualModelRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)((	otherlv_2='type' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVirtualModelAccess().getTypeKeyword_2_0());
    }
)+(	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getVirtualModelAccess().getEqualsSignKeyword_2_1());
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getVirtualModelAccess().getTypeVMTYPEEnumRuleCall_2_2_0()); 
	    }
		lv_type_4_0=ruleVMTYPE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVirtualModelRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_4_0, 
        		"VMTYPE");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_5='uri' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getVirtualModelAccess().getUriKeyword_3());
    }
)+(	otherlv_6='=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getVirtualModelAccess().getEqualsSignKeyword_4());
    }
)+(
(
		lv_uri_7_0=RULE_URISTRING
		{
			newLeafNode(lv_uri_7_0, grammarAccess.getVirtualModelAccess().getUriURISTRINGTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVirtualModelRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"uri",
        		lv_uri_7_0, 
        		"URISTRING");
	    }

)
)	otherlv_8='{' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getVirtualModelAccess().getLeftCurlyBracketKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVirtualModelAccess().getModelSlotsModelSlotParserRuleCall_7_0()); 
	    }
		lv_ModelSlots_9_0=ruleModelSlot		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVirtualModelRule());
	        }
       		add(
       			$current, 
       			"ModelSlots",
        		lv_ModelSlots_9_0, 
        		"ModelSlot");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getVirtualModelAccess().getEditionPatternsEditionPatternParserRuleCall_8_0()); 
	    }
		lv_EditionPatterns_10_0=ruleEditionPattern		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVirtualModelRule());
	        }
       		add(
       			$current, 
       			"EditionPatterns",
        		lv_EditionPatterns_10_0, 
        		"EditionPattern");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getVirtualModelAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleModelSlot
entryRuleModelSlot returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelSlotRule()); }
	 iv_ruleModelSlot=ruleModelSlot 
	 { $current=$iv_ruleModelSlot.current; } 
	 EOF 
;

// Rule ModelSlot
ruleModelSlot returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ModelSlot' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getModelSlotAccess().getModelSlotKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getModelSlotAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModelSlotRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='type' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getModelSlotAccess().getTypeKeyword_2());
    }
)+(	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getModelSlotAccess().getEqualsSignKeyword_3());
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getModelSlotAccess().getTypeMSTYPEEnumRuleCall_4_0()); 
	    }
		lv_type_4_0=ruleMSTYPE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelSlotRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_4_0, 
        		"MSTYPE");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5='conformTo' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getModelSlotAccess().getConformToKeyword_5());
    }
)+(	otherlv_6='=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getModelSlotAccess().getEqualsSignKeyword_6());
    }
)+(
(
		lv_uri_7_0=RULE_URISTRING
		{
			newLeafNode(lv_uri_7_0, grammarAccess.getModelSlotAccess().getUriURISTRINGTerminalRuleCall_7_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModelSlotRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"uri",
        		lv_uri_7_0, 
        		"URISTRING");
	    }

)
)(	otherlv_8='required' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getModelSlotAccess().getRequiredKeyword_8());
    }
)+(	otherlv_9='=' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getModelSlotAccess().getEqualsSignKeyword_9());
    }
)+(
(
		lv_required_10_0=RULE_BOOL
		{
			newLeafNode(lv_required_10_0, grammarAccess.getModelSlotAccess().getRequiredBOOLTerminalRuleCall_10_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModelSlotRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"required",
        		lv_required_10_0, 
        		"BOOL");
	    }

)
)(	otherlv_11='readOnly' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getModelSlotAccess().getReadOnlyKeyword_11());
    }
)+(	otherlv_12='=' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getModelSlotAccess().getEqualsSignKeyword_12());
    }
)+(
(
		lv_readOnly_13_0=RULE_BOOL
		{
			newLeafNode(lv_readOnly_13_0, grammarAccess.getModelSlotAccess().getReadOnlyBOOLTerminalRuleCall_13_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModelSlotRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"readOnly",
        		lv_readOnly_13_0, 
        		"BOOL");
	    }

)
)	otherlv_14=';' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getModelSlotAccess().getSemicolonKeyword_14());
    }
)
;





// Entry rule entryRuleEditionPattern
entryRuleEditionPattern returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEditionPatternRule()); }
	 iv_ruleEditionPattern=ruleEditionPattern 
	 { $current=$iv_ruleEditionPattern.current; } 
	 EOF 
;

// Rule EditionPattern
ruleEditionPattern returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='EditionPattern' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEditionPatternAccess().getEditionPatternKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getEditionPatternAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEditionPatternRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='extends' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEditionPatternAccess().getExtendsKeyword_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getEditionPatternRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getEditionPatternAccess().getSuperEditionPatternEditionPatternCrossReference_2_1_0()); 
	}

)
))?	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEditionPatternAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEditionPatternAccess().getPatternRolesPatternRoleParserRuleCall_4_0()); 
	    }
		lv_patternRoles_5_0=rulePatternRole		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEditionPatternRule());
	        }
       		add(
       			$current, 
       			"patternRoles",
        		lv_patternRoles_5_0, 
        		"PatternRole");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getEditionPatternAccess().getEditionSchemesEditionSchemeParserRuleCall_5_0()); 
	    }
		lv_editionSchemes_6_0=ruleEditionScheme		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEditionPatternRule());
	        }
       		add(
       			$current, 
       			"editionSchemes",
        		lv_editionSchemes_6_0, 
        		"EditionScheme");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getEditionPatternAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRulePatternRole
entryRulePatternRole returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPatternRoleRule()); }
	 iv_rulePatternRole=rulePatternRole 
	 { $current=$iv_rulePatternRole.current; } 
	 EOF 
;

// Rule PatternRole
rulePatternRole returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='PatternRole' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPatternRoleAccess().getPatternRoleKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getPatternRoleAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPatternRoleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='as' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPatternRoleAccess().getAsKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPatternRoleAccess().getTypePRTYPEEnumRuleCall_3_0()); 
	    }
		lv_type_3_0=rulePRTYPE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPatternRoleRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"PRTYPE");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='conformTo' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPatternRoleAccess().getConformToKeyword_4());
    }
(
(
		lv_modelElement_5_0=RULE_ID
		{
			newLeafNode(lv_modelElement_5_0, grammarAccess.getPatternRoleAccess().getModelElementIDTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPatternRoleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"modelElement",
        		lv_modelElement_5_0, 
        		"ID");
	    }

)
)	otherlv_6='from' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getPatternRoleAccess().getFromKeyword_6());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPatternRoleRule());
	        }
        }
	otherlv_7=RULE_ID
	{
		newLeafNode(otherlv_7, grammarAccess.getPatternRoleAccess().getModelSlotModelSlotCrossReference_7_0()); 
	}

)
)	otherlv_8=';' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getPatternRoleAccess().getSemicolonKeyword_8());
    }
)
;





// Entry rule entryRuleEditionScheme
entryRuleEditionScheme returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEditionSchemeRule()); }
	 iv_ruleEditionScheme=ruleEditionScheme 
	 { $current=$iv_ruleEditionScheme.current; } 
	 EOF 
;

// Rule EditionScheme
ruleEditionScheme returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getEditionSchemeAccess().getEditionSchemeTypeEditionSchemeTypeEnumRuleCall_0_0()); 
	    }
		lv_editionSchemeType_0_0=ruleEditionSchemeType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEditionSchemeRule());
	        }
       		set(
       			$current, 
       			"editionSchemeType",
        		lv_editionSchemeType_0_0, 
        		"EditionSchemeType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getEditionSchemeAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEditionSchemeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEditionSchemeAccess().getLeftParenthesisKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getEditionSchemeAccess().getParameterParameterParserRuleCall_3_0_0()); 
	    }
		lv_parameter_3_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEditionSchemeRule());
	        }
       		add(
       			$current, 
       			"parameter",
        		lv_parameter_3_0, 
        		"Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
)+((	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEditionSchemeAccess().getCommaKeyword_3_1_0());
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getEditionSchemeAccess().getParameterParameterParserRuleCall_3_1_1_0()); 
	    }
		lv_parameter_5_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEditionSchemeRule());
	        }
       		add(
       			$current, 
       			"parameter",
        		lv_parameter_5_0, 
        		"Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getEditionSchemeAccess().getRightParenthesisKeyword_4());
    }
	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getEditionSchemeAccess().getLeftCurlyBracketKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEditionSchemeAccess().getEditionActionEditionActionParserRuleCall_6_0()); 
	    }
		lv_editionAction_8_0=ruleEditionAction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEditionSchemeRule());
	        }
       		add(
       			$current, 
       			"editionAction",
        		lv_editionAction_8_0, 
        		"EditionAction");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getEditionSchemeAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	 iv_ruleParameter=ruleParameter 
	 { $current=$iv_ruleParameter.current; } 
	 EOF 
;

// Rule Parameter
ruleParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getParameterAccess().getWidgetPRTYPEEnumRuleCall_0_0()); 
	    }
		lv_widget_0_0=rulePRTYPE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterRule());
	        }
       		set(
       			$current, 
       			"widget",
        		lv_widget_0_0, 
        		"PRTYPE");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getParameterAccess().getColonKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getParameterAccess().getEditionPatternEditionPatternCrossReference_2_0()); 
	}

)
)(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleEditionAction
entryRuleEditionAction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEditionActionRule()); }
	 iv_ruleEditionAction=ruleEditionAction 
	 { $current=$iv_ruleEditionAction.current; } 
	 EOF 
;

// Rule EditionAction
ruleEditionAction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getEditionActionAccess().getBuiltInActionParserRuleCall()); 
    }
    this_BuiltInAction_0=ruleBuiltInAction
    { 
        $current = $this_BuiltInAction_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleBuiltInAction
entryRuleBuiltInAction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBuiltInActionRule()); }
	 iv_ruleBuiltInAction=ruleBuiltInAction 
	 { $current=$iv_ruleBuiltInAction.current; } 
	 EOF 
;

// Rule BuiltInAction
ruleBuiltInAction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getBuiltInActionAccess().getDeclarePatternRoleParserRuleCall_0()); 
    }
    this_DeclarePatternRole_0=ruleDeclarePatternRole
    { 
        $current = $this_DeclarePatternRole_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBuiltInActionAccess().getDeleteActionParserRuleCall_1()); 
    }
    this_DeleteAction_1=ruleDeleteAction
    { 
        $current = $this_DeleteAction_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBuiltInActionAccess().getAddEMFObjectIndividualParserRuleCall_2()); 
    }
    this_AddEMFObjectIndividual_2=ruleAddEMFObjectIndividual
    { 
        $current = $this_AddEMFObjectIndividual_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleDeclarePatternRole
entryRuleDeclarePatternRole returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeclarePatternRoleRule()); }
	 iv_ruleDeclarePatternRole=ruleDeclarePatternRole 
	 { $current=$iv_ruleDeclarePatternRole.current; } 
	 EOF 
;

// Rule DeclarePatternRole
ruleDeclarePatternRole returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeclarePatternRoleRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getDeclarePatternRoleAccess().getPatternRolePatternRoleCrossReference_0_0_0()); 
	}

)
)+	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDeclarePatternRoleAccess().getEqualsSignKeyword_0_1());
    }
)+((	otherlv_2='parameters' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDeclarePatternRoleAccess().getParametersKeyword_1_0_0());
    }
	otherlv_3='.' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDeclarePatternRoleAccess().getFullStopKeyword_1_0_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeclarePatternRoleRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getDeclarePatternRoleAccess().getParameterParameterCrossReference_1_0_2_0()); 
	}

)
)	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDeclarePatternRoleAccess().getSemicolonKeyword_1_0_3());
    }
)
    |((	otherlv_6='(' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDeclarePatternRoleAccess().getLeftParenthesisKeyword_1_1_0());
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclarePatternRoleAccess().getAddAddEMFObjectIndividualParserRuleCall_1_1_1_0()); 
	    }
		lv_add_7_0=ruleAddEMFObjectIndividual		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclarePatternRoleRule());
	        }
       		add(
       			$current, 
       			"add",
        		lv_add_7_0, 
        		"AddEMFObjectIndividual");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_8=')' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDeclarePatternRoleAccess().getRightParenthesisKeyword_1_1_2());
    }
)))
;





// Entry rule entryRuleDeleteAction
entryRuleDeleteAction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeleteActionRule()); }
	 iv_ruleDeleteAction=ruleDeleteAction 
	 { $current=$iv_ruleDeleteAction.current; } 
	 EOF 
;

// Rule DeleteAction
ruleDeleteAction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='delete' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDeleteActionAccess().getDeleteKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeleteActionRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getDeleteActionAccess().getPatternRolePatternRoleCrossReference_1_0()); 
	}

)
)	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDeleteActionAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleAddEMFObjectIndividual
entryRuleAddEMFObjectIndividual returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAddEMFObjectIndividualRule()); }
	 iv_ruleAddEMFObjectIndividual=ruleAddEMFObjectIndividual 
	 { $current=$iv_ruleAddEMFObjectIndividual.current; } 
	 EOF 
;

// Rule AddEMFObjectIndividual
ruleAddEMFObjectIndividual returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='AddEMFObjectIndividual' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAddEMFObjectIndividualAccess().getAddEMFObjectIndividualKeyword_0());
    }
	otherlv_1='conformTo' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAddEMFObjectIndividualAccess().getConformToKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddEMFObjectIndividualRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getAddEMFObjectIndividualAccess().getEditionPatternEditionPatternCrossReference_2_0()); 
	}

)
)	otherlv_3='from' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAddEMFObjectIndividualAccess().getFromKeyword_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddEMFObjectIndividualRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getAddEMFObjectIndividualAccess().getModelSlotModelSlotCrossReference_4_0()); 
	}

)
)	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAddEMFObjectIndividualAccess().getLeftCurlyBracketKeyword_5());
    }
	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAddEMFObjectIndividualAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Rule EditionSchemeType
ruleEditionSchemeType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='CreationScheme' 
	{
        $current = grammarAccess.getEditionSchemeTypeAccess().getCreationSchemeEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getEditionSchemeTypeAccess().getCreationSchemeEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='DeletionScheme' 
	{
        $current = grammarAccess.getEditionSchemeTypeAccess().getDeletionSchemeEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getEditionSchemeTypeAccess().getDeletionSchemeEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='ActionScheme' 
	{
        $current = grammarAccess.getEditionSchemeTypeAccess().getActionSchemeEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getEditionSchemeTypeAccess().getActionSchemeEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='CloningScheme' 
	{
        $current = grammarAccess.getEditionSchemeTypeAccess().getCloningSchemeEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getEditionSchemeTypeAccess().getCloningSchemeEnumLiteralDeclaration_3()); 
    }
));



// Rule MSTYPE
ruleMSTYPE returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='OWLModelSlot' 
	{
        $current = grammarAccess.getMSTYPEAccess().getOwlEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getMSTYPEAccess().getOwlEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='DiagramModelSlot' 
	{
        $current = grammarAccess.getMSTYPEAccess().getDiagEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getMSTYPEAccess().getDiagEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='EMFModelSlot' 
	{
        $current = grammarAccess.getMSTYPEAccess().getEmfEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getMSTYPEAccess().getEmfEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='VirtualModelModelSlot' 
	{
        $current = grammarAccess.getMSTYPEAccess().getVirtualEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getMSTYPEAccess().getVirtualEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='XSDModelSlot' 
	{
        $current = grammarAccess.getMSTYPEAccess().getXsdEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getMSTYPEAccess().getXsdEnumLiteralDeclaration_4()); 
    }
));



// Rule VMTYPE
ruleVMTYPE returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='DiagramSpecification' 
	{
        $current = grammarAccess.getVMTYPEAccess().getDiagSpecEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getVMTYPEAccess().getDiagSpecEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='VirtualModel' 
	{
        $current = grammarAccess.getVMTYPEAccess().getVMEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getVMTYPEAccess().getVMEnumLiteralDeclaration_1()); 
    }
));



// Rule PRTYPE
rulePRTYPE returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
(	enumLiteral_0='Individual' 
	{
        $current = grammarAccess.getPRTYPEAccess().getIndividualEnumLiteralDeclaration().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getPRTYPEAccess().getIndividualEnumLiteralDeclaration()); 
    }
);



RULE_BOOL : ('true'|'false');

RULE_URISTRING : '"'+ RULE_URI+ '"';

RULE_URI : ('a'..'z')+ '://' (('0'..'9')+ '.' ('0'..'9')+ '.' ('0'..'9')+ '.' ('0'..'9')+|('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z'|'0'..'9'|'$'|'-'|'_'|'\\' ('0'..'9'|'a'..'f'|'A'..'F') ('0'..'9'|'a'..'f'|'A'..'F')|'%' '0'..'9' '0'..'9')* ('.' ('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z'|'0'..'9'|'$'|'-'|'_'|'\\' ('0'..'9'|'a'..'f'|'A'..'F') ('0'..'9'|'a'..'f'|'A'..'F')|'%' '0'..'9' '0'..'9')*)*) (':' ('0'..'9')+)? ('/' ('a'..'z'|'A'..'Z'|'0'..'9'|'$'|'-'|'_'|'~'|'+'|'.'|'\\' ('0'..'9'|'a'..'f'|'A'..'F') ('0'..'9'|'a'..'f'|'A'..'F')|'%' '0'..'9' '0'..'9')*)* ('?' ('a'..'z'|'A'..'Z'|'0'..'9'|'$'|'-'|'_'|'='|'&'|';'|'\\' ('0'..'9'|'a'..'f'|'A'..'F') ('0'..'9'|'a'..'f'|'A'..'F')|'%' '0'..'9' '0'..'9')+ ('+' ('a'..'z'|'A'..'Z'|'0'..'9'|'$'|'-'|'_'|'='|'&'|';'|'\\' ('0'..'9'|'a'..'f'|'A'..'F') ('0'..'9'|'a'..'f'|'A'..'F')|'%' '0'..'9' '0'..'9')+)*)?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


