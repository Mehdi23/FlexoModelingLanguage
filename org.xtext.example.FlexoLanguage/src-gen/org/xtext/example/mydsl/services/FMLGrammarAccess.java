/*
* generated by Xtext
*/
package org.xtext.example.mydsl.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class FMLGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ViewDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ViewDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cViewDefinitionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cUriKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cEqualsSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cUriAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cUriURISTRINGTerminalRuleCall_4_0 = (RuleCall)cUriAssignment_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cElementsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cElementsVirtualModelParserRuleCall_6_0 = (RuleCall)cElementsAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//ViewDef:
		//	"ViewDefinition" name=ID "uri"+ "="+ uri=URISTRING "{" elements+=VirtualModel* "}";
		public ParserRule getRule() { return rule; }

		//"ViewDefinition" name=ID "uri"+ "="+ uri=URISTRING "{" elements+=VirtualModel* "}"
		public Group getGroup() { return cGroup; }

		//"ViewDefinition"
		public Keyword getViewDefinitionKeyword_0() { return cViewDefinitionKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"uri"+
		public Keyword getUriKeyword_2() { return cUriKeyword_2; }

		//"="+
		public Keyword getEqualsSignKeyword_3() { return cEqualsSignKeyword_3; }

		//uri=URISTRING
		public Assignment getUriAssignment_4() { return cUriAssignment_4; }

		//URISTRING
		public RuleCall getUriURISTRINGTerminalRuleCall_4_0() { return cUriURISTRINGTerminalRuleCall_4_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }

		//elements+=VirtualModel*
		public Assignment getElementsAssignment_6() { return cElementsAssignment_6; }

		//VirtualModel
		public RuleCall getElementsVirtualModelParserRuleCall_6_0() { return cElementsVirtualModelParserRuleCall_6_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class VirtualModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "VirtualModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVirtualModelKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cTypeKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cTypeAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cTypeVMTYPEEnumRuleCall_2_2_0 = (RuleCall)cTypeAssignment_2_2.eContents().get(0);
		private final Keyword cUriKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cUriAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cUriURISTRINGTerminalRuleCall_5_0 = (RuleCall)cUriAssignment_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cModelSlotsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cModelSlotsModelSlotParserRuleCall_7_0 = (RuleCall)cModelSlotsAssignment_7.eContents().get(0);
		private final Assignment cEditionPatternsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cEditionPatternsEditionPatternParserRuleCall_8_0 = (RuleCall)cEditionPatternsAssignment_8.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//VirtualModel:
		//	"VirtualModel" name=ID ("type"+ "="+ type=VMTYPE)? "uri"+ "="+ uri=URISTRING "{" ModelSlots+=ModelSlot*
		//	EditionPatterns+=EditionPattern* "}";
		public ParserRule getRule() { return rule; }

		//"VirtualModel" name=ID ("type"+ "="+ type=VMTYPE)? "uri"+ "="+ uri=URISTRING "{" ModelSlots+=ModelSlot*
		//EditionPatterns+=EditionPattern* "}"
		public Group getGroup() { return cGroup; }

		//"VirtualModel"
		public Keyword getVirtualModelKeyword_0() { return cVirtualModelKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//("type"+ "="+ type=VMTYPE)?
		public Group getGroup_2() { return cGroup_2; }

		//"type"+
		public Keyword getTypeKeyword_2_0() { return cTypeKeyword_2_0; }

		//"="+
		public Keyword getEqualsSignKeyword_2_1() { return cEqualsSignKeyword_2_1; }

		//type=VMTYPE
		public Assignment getTypeAssignment_2_2() { return cTypeAssignment_2_2; }

		//VMTYPE
		public RuleCall getTypeVMTYPEEnumRuleCall_2_2_0() { return cTypeVMTYPEEnumRuleCall_2_2_0; }

		//"uri"+
		public Keyword getUriKeyword_3() { return cUriKeyword_3; }

		//"="+
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }

		//uri=URISTRING
		public Assignment getUriAssignment_5() { return cUriAssignment_5; }

		//URISTRING
		public RuleCall getUriURISTRINGTerminalRuleCall_5_0() { return cUriURISTRINGTerminalRuleCall_5_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }

		//ModelSlots+=ModelSlot*
		public Assignment getModelSlotsAssignment_7() { return cModelSlotsAssignment_7; }

		//ModelSlot
		public RuleCall getModelSlotsModelSlotParserRuleCall_7_0() { return cModelSlotsModelSlotParserRuleCall_7_0; }

		//EditionPatterns+=EditionPattern*
		public Assignment getEditionPatternsAssignment_8() { return cEditionPatternsAssignment_8; }

		//EditionPattern
		public RuleCall getEditionPatternsEditionPatternParserRuleCall_8_0() { return cEditionPatternsEditionPatternParserRuleCall_8_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}

	public class ModelSlotElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ModelSlot");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cModelSlotKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cTypeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cEqualsSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTypeMSTYPEEnumRuleCall_4_0 = (RuleCall)cTypeAssignment_4.eContents().get(0);
		private final Keyword cConformToKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cEqualsSignKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cUriAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cUriURISTRINGTerminalRuleCall_7_0 = (RuleCall)cUriAssignment_7.eContents().get(0);
		private final Keyword cRequiredKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cEqualsSignKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cRequiredAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cRequiredBOOLTerminalRuleCall_10_0 = (RuleCall)cRequiredAssignment_10.eContents().get(0);
		private final Keyword cReadOnlyKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cEqualsSignKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cReadOnlyAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cReadOnlyBOOLTerminalRuleCall_13_0 = (RuleCall)cReadOnlyAssignment_13.eContents().get(0);
		private final Keyword cSemicolonKeyword_14 = (Keyword)cGroup.eContents().get(14);
		
		//ModelSlot:
		//	"ModelSlot" name=ID "type"+ "="+ type=MSTYPE "conformTo"+ "="+ uri=URISTRING "required"+ "="+ required=BOOL
		//	"readOnly"+ "="+ readOnly=BOOL ";";
		public ParserRule getRule() { return rule; }

		//"ModelSlot" name=ID "type"+ "="+ type=MSTYPE "conformTo"+ "="+ uri=URISTRING "required"+ "="+ required=BOOL "readOnly"+
		//"="+ readOnly=BOOL ";"
		public Group getGroup() { return cGroup; }

		//"ModelSlot"
		public Keyword getModelSlotKeyword_0() { return cModelSlotKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"type"+
		public Keyword getTypeKeyword_2() { return cTypeKeyword_2; }

		//"="+
		public Keyword getEqualsSignKeyword_3() { return cEqualsSignKeyword_3; }

		//type=MSTYPE
		public Assignment getTypeAssignment_4() { return cTypeAssignment_4; }

		//MSTYPE
		public RuleCall getTypeMSTYPEEnumRuleCall_4_0() { return cTypeMSTYPEEnumRuleCall_4_0; }

		//"conformTo"+
		public Keyword getConformToKeyword_5() { return cConformToKeyword_5; }

		//"="+
		public Keyword getEqualsSignKeyword_6() { return cEqualsSignKeyword_6; }

		//uri=URISTRING
		public Assignment getUriAssignment_7() { return cUriAssignment_7; }

		//URISTRING
		public RuleCall getUriURISTRINGTerminalRuleCall_7_0() { return cUriURISTRINGTerminalRuleCall_7_0; }

		//"required"+
		public Keyword getRequiredKeyword_8() { return cRequiredKeyword_8; }

		//"="+
		public Keyword getEqualsSignKeyword_9() { return cEqualsSignKeyword_9; }

		//required=BOOL
		public Assignment getRequiredAssignment_10() { return cRequiredAssignment_10; }

		//BOOL
		public RuleCall getRequiredBOOLTerminalRuleCall_10_0() { return cRequiredBOOLTerminalRuleCall_10_0; }

		//"readOnly"+
		public Keyword getReadOnlyKeyword_11() { return cReadOnlyKeyword_11; }

		//"="+
		public Keyword getEqualsSignKeyword_12() { return cEqualsSignKeyword_12; }

		//readOnly=BOOL
		public Assignment getReadOnlyAssignment_13() { return cReadOnlyAssignment_13; }

		//BOOL
		public RuleCall getReadOnlyBOOLTerminalRuleCall_13_0() { return cReadOnlyBOOLTerminalRuleCall_13_0; }

		//";"
		public Keyword getSemicolonKeyword_14() { return cSemicolonKeyword_14; }
	}

	public class EditionPatternElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EditionPattern");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEditionPatternKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cExtendsKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cSuperEditionPatternAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cSuperEditionPatternEditionPatternCrossReference_2_1_0 = (CrossReference)cSuperEditionPatternAssignment_2_1.eContents().get(0);
		private final RuleCall cSuperEditionPatternEditionPatternIDTerminalRuleCall_2_1_0_1 = (RuleCall)cSuperEditionPatternEditionPatternCrossReference_2_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cPatternRolesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cPatternRolesPatternRoleParserRuleCall_4_0 = (RuleCall)cPatternRolesAssignment_4.eContents().get(0);
		private final Assignment cEditionSchemesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cEditionSchemesEditionSchemeParserRuleCall_5_0 = (RuleCall)cEditionSchemesAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//EditionPattern:
		//	"EditionPattern" name=ID ("extends" superEditionPattern=[EditionPattern])? "{" patternRoles+=PatternRole*
		//	editionSchemes+=EditionScheme* "}";
		public ParserRule getRule() { return rule; }

		//"EditionPattern" name=ID ("extends" superEditionPattern=[EditionPattern])? "{" patternRoles+=PatternRole*
		//editionSchemes+=EditionScheme* "}"
		public Group getGroup() { return cGroup; }

		//"EditionPattern"
		public Keyword getEditionPatternKeyword_0() { return cEditionPatternKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//("extends" superEditionPattern=[EditionPattern])?
		public Group getGroup_2() { return cGroup_2; }

		//"extends"
		public Keyword getExtendsKeyword_2_0() { return cExtendsKeyword_2_0; }

		//superEditionPattern=[EditionPattern]
		public Assignment getSuperEditionPatternAssignment_2_1() { return cSuperEditionPatternAssignment_2_1; }

		//[EditionPattern]
		public CrossReference getSuperEditionPatternEditionPatternCrossReference_2_1_0() { return cSuperEditionPatternEditionPatternCrossReference_2_1_0; }

		//ID
		public RuleCall getSuperEditionPatternEditionPatternIDTerminalRuleCall_2_1_0_1() { return cSuperEditionPatternEditionPatternIDTerminalRuleCall_2_1_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//patternRoles+=PatternRole*
		public Assignment getPatternRolesAssignment_4() { return cPatternRolesAssignment_4; }

		//PatternRole
		public RuleCall getPatternRolesPatternRoleParserRuleCall_4_0() { return cPatternRolesPatternRoleParserRuleCall_4_0; }

		//editionSchemes+=EditionScheme*
		public Assignment getEditionSchemesAssignment_5() { return cEditionSchemesAssignment_5; }

		//EditionScheme
		public RuleCall getEditionSchemesEditionSchemeParserRuleCall_5_0() { return cEditionSchemesEditionSchemeParserRuleCall_5_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class PatternRoleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PatternRole");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPatternRoleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cAsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypePRTYPEEnumRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		private final Keyword cConformToKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cModelElementAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cModelElementSTRINGTerminalRuleCall_5_0 = (RuleCall)cModelElementAssignment_5.eContents().get(0);
		private final Keyword cFromKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cModelSlotAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cModelSlotModelSlotCrossReference_7_0 = (CrossReference)cModelSlotAssignment_7.eContents().get(0);
		private final RuleCall cModelSlotModelSlotIDTerminalRuleCall_7_0_1 = (RuleCall)cModelSlotModelSlotCrossReference_7_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//PatternRole:
		//	"PatternRole" name=ID "as" type=PRTYPE "conformTo" modelElement=STRING "from" modelSlot=[ModelSlot] ";";
		public ParserRule getRule() { return rule; }

		//"PatternRole" name=ID "as" type=PRTYPE "conformTo" modelElement=STRING "from" modelSlot=[ModelSlot] ";"
		public Group getGroup() { return cGroup; }

		//"PatternRole"
		public Keyword getPatternRoleKeyword_0() { return cPatternRoleKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"as"
		public Keyword getAsKeyword_2() { return cAsKeyword_2; }

		//type=PRTYPE
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//PRTYPE
		public RuleCall getTypePRTYPEEnumRuleCall_3_0() { return cTypePRTYPEEnumRuleCall_3_0; }

		//"conformTo"
		public Keyword getConformToKeyword_4() { return cConformToKeyword_4; }

		//modelElement=STRING
		public Assignment getModelElementAssignment_5() { return cModelElementAssignment_5; }

		//STRING
		public RuleCall getModelElementSTRINGTerminalRuleCall_5_0() { return cModelElementSTRINGTerminalRuleCall_5_0; }

		//"from"
		public Keyword getFromKeyword_6() { return cFromKeyword_6; }

		//modelSlot=[ModelSlot]
		public Assignment getModelSlotAssignment_7() { return cModelSlotAssignment_7; }

		//[ModelSlot]
		public CrossReference getModelSlotModelSlotCrossReference_7_0() { return cModelSlotModelSlotCrossReference_7_0; }

		//ID
		public RuleCall getModelSlotModelSlotIDTerminalRuleCall_7_0_1() { return cModelSlotModelSlotIDTerminalRuleCall_7_0_1; }

		//";"
		public Keyword getSemicolonKeyword_8() { return cSemicolonKeyword_8; }
	}

	public class EditionSchemeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EditionScheme");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cEditionSchemeTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cEditionSchemeTypeEditionSchemeTypeEnumRuleCall_0_0 = (RuleCall)cEditionSchemeTypeAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cParameterAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cParameterParameterParserRuleCall_3_0_0 = (RuleCall)cParameterAssignment_3_0.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Keyword cCommaKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cParameterAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cParameterParameterParserRuleCall_3_1_1_0 = (RuleCall)cParameterAssignment_3_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cEditionActionAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cEditionActionEditionActionParserRuleCall_6_0 = (RuleCall)cEditionActionAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//EditionScheme:
		//	editionSchemeType=EditionSchemeType name=ID "(" (parameter+=Parameter+ (","+ parameter+=Parameter)*)? ")" "{"
		//	editionAction+=EditionAction* "}";
		public ParserRule getRule() { return rule; }

		//editionSchemeType=EditionSchemeType name=ID "(" (parameter+=Parameter+ (","+ parameter+=Parameter)*)? ")" "{"
		//editionAction+=EditionAction* "}"
		public Group getGroup() { return cGroup; }

		//editionSchemeType=EditionSchemeType
		public Assignment getEditionSchemeTypeAssignment_0() { return cEditionSchemeTypeAssignment_0; }

		//EditionSchemeType
		public RuleCall getEditionSchemeTypeEditionSchemeTypeEnumRuleCall_0_0() { return cEditionSchemeTypeEditionSchemeTypeEnumRuleCall_0_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//(parameter+=Parameter+ (","+ parameter+=Parameter)*)?
		public Group getGroup_3() { return cGroup_3; }

		//parameter+=Parameter+
		public Assignment getParameterAssignment_3_0() { return cParameterAssignment_3_0; }

		//Parameter
		public RuleCall getParameterParameterParserRuleCall_3_0_0() { return cParameterParameterParserRuleCall_3_0_0; }

		//(","+ parameter+=Parameter)*
		public Group getGroup_3_1() { return cGroup_3_1; }

		//","+
		public Keyword getCommaKeyword_3_1_0() { return cCommaKeyword_3_1_0; }

		//parameter+=Parameter
		public Assignment getParameterAssignment_3_1_1() { return cParameterAssignment_3_1_1; }

		//Parameter
		public RuleCall getParameterParameterParserRuleCall_3_1_1_0() { return cParameterParameterParserRuleCall_3_1_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }

		//editionAction+=EditionAction*
		public Assignment getEditionActionAssignment_6() { return cEditionActionAssignment_6; }

		//EditionAction
		public RuleCall getEditionActionEditionActionParserRuleCall_6_0() { return cEditionActionEditionActionParserRuleCall_6_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class ParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Parameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cWidgetAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cWidgetPRTYPEEnumRuleCall_0_0 = (RuleCall)cWidgetAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cEditionPatternAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cEditionPatternEditionPatternCrossReference_2_0 = (CrossReference)cEditionPatternAssignment_2.eContents().get(0);
		private final RuleCall cEditionPatternEditionPatternIDTerminalRuleCall_2_0_1 = (RuleCall)cEditionPatternEditionPatternCrossReference_2_0.eContents().get(1);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		
		//Parameter:
		//	widget=PRTYPE ":" editionPattern=[EditionPattern] name=ID;
		public ParserRule getRule() { return rule; }

		//widget=PRTYPE ":" editionPattern=[EditionPattern] name=ID
		public Group getGroup() { return cGroup; }

		//widget=PRTYPE
		public Assignment getWidgetAssignment_0() { return cWidgetAssignment_0; }

		//PRTYPE
		public RuleCall getWidgetPRTYPEEnumRuleCall_0_0() { return cWidgetPRTYPEEnumRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//editionPattern=[EditionPattern]
		public Assignment getEditionPatternAssignment_2() { return cEditionPatternAssignment_2; }

		//[EditionPattern]
		public CrossReference getEditionPatternEditionPatternCrossReference_2_0() { return cEditionPatternEditionPatternCrossReference_2_0; }

		//ID
		public RuleCall getEditionPatternEditionPatternIDTerminalRuleCall_2_0_1() { return cEditionPatternEditionPatternIDTerminalRuleCall_2_0_1; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }
	}

	public class EditionActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EditionAction");
		private final RuleCall cBuiltInActionParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//EditionAction:
		//	BuiltInAction;
		public ParserRule getRule() { return rule; }

		//BuiltInAction
		public RuleCall getBuiltInActionParserRuleCall() { return cBuiltInActionParserRuleCall; }
	}

	public class BuiltInActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BuiltInAction");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDeclarePatternRoleParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDeleteActionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//BuiltInAction:
		//	DeclarePatternRole | DeleteAction;
		public ParserRule getRule() { return rule; }

		//DeclarePatternRole | DeleteAction
		public Alternatives getAlternatives() { return cAlternatives; }

		//DeclarePatternRole
		public RuleCall getDeclarePatternRoleParserRuleCall_0() { return cDeclarePatternRoleParserRuleCall_0; }

		//DeleteAction
		public RuleCall getDeleteActionParserRuleCall_1() { return cDeleteActionParserRuleCall_1; }
	}

	public class DeclarePatternRoleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DeclarePatternRole");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPatternRoleAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cPatternRolePatternRoleCrossReference_0_0 = (CrossReference)cPatternRoleAssignment_0.eContents().get(0);
		private final RuleCall cPatternRolePatternRoleIDTerminalRuleCall_0_0_1 = (RuleCall)cPatternRolePatternRoleCrossReference_0_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cParametersKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cFullStopKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cParameterAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cParameterParameterCrossReference_4_0 = (CrossReference)cParameterAssignment_4.eContents().get(0);
		private final RuleCall cParameterParameterIDTerminalRuleCall_4_0_1 = (RuleCall)cParameterParameterCrossReference_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//DeclarePatternRole:
		//	patternRole=[PatternRole] "=" "parameters" "." parameter=[Parameter] ";";
		public ParserRule getRule() { return rule; }

		//patternRole=[PatternRole] "=" "parameters" "." parameter=[Parameter] ";"
		public Group getGroup() { return cGroup; }

		//patternRole=[PatternRole]
		public Assignment getPatternRoleAssignment_0() { return cPatternRoleAssignment_0; }

		//[PatternRole]
		public CrossReference getPatternRolePatternRoleCrossReference_0_0() { return cPatternRolePatternRoleCrossReference_0_0; }

		//ID
		public RuleCall getPatternRolePatternRoleIDTerminalRuleCall_0_0_1() { return cPatternRolePatternRoleIDTerminalRuleCall_0_0_1; }

		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }

		//"parameters"
		public Keyword getParametersKeyword_2() { return cParametersKeyword_2; }

		//"."
		public Keyword getFullStopKeyword_3() { return cFullStopKeyword_3; }

		//parameter=[Parameter]
		public Assignment getParameterAssignment_4() { return cParameterAssignment_4; }

		//[Parameter]
		public CrossReference getParameterParameterCrossReference_4_0() { return cParameterParameterCrossReference_4_0; }

		//ID
		public RuleCall getParameterParameterIDTerminalRuleCall_4_0_1() { return cParameterParameterIDTerminalRuleCall_4_0_1; }

		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}

	public class DeleteActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DeleteAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDeleteKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPatternRoleAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cPatternRolePatternRoleCrossReference_1_0 = (CrossReference)cPatternRoleAssignment_1.eContents().get(0);
		private final RuleCall cPatternRolePatternRoleIDTerminalRuleCall_1_0_1 = (RuleCall)cPatternRolePatternRoleCrossReference_1_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//DeleteAction:
		//	"delete" patternRole=[PatternRole] ";";
		public ParserRule getRule() { return rule; }

		//"delete" patternRole=[PatternRole] ";"
		public Group getGroup() { return cGroup; }

		//"delete"
		public Keyword getDeleteKeyword_0() { return cDeleteKeyword_0; }

		//patternRole=[PatternRole]
		public Assignment getPatternRoleAssignment_1() { return cPatternRoleAssignment_1; }

		//[PatternRole]
		public CrossReference getPatternRolePatternRoleCrossReference_1_0() { return cPatternRolePatternRoleCrossReference_1_0; }

		//ID
		public RuleCall getPatternRolePatternRoleIDTerminalRuleCall_1_0_1() { return cPatternRolePatternRoleIDTerminalRuleCall_1_0_1; }

		//";"
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	
	
	public class EditionSchemeTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "EditionSchemeType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cCreationSchemeEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cCreationSchemeCreationSchemeKeyword_0_0 = (Keyword)cCreationSchemeEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cDeletionSchemeEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cDeletionSchemeDeletionSchemeKeyword_1_0 = (Keyword)cDeletionSchemeEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cActionSchemeEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cActionSchemeActionSchemeKeyword_2_0 = (Keyword)cActionSchemeEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cCloningSchemeEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cCloningSchemeCloningSchemeKeyword_3_0 = (Keyword)cCloningSchemeEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum EditionSchemeType:
		//	creationScheme="CreationScheme" | deletionScheme="DeletionScheme" | actionScheme="ActionScheme" |
		//	cloningScheme="CloningScheme";
		public EnumRule getRule() { return rule; }

		//creationScheme="CreationScheme" | deletionScheme="DeletionScheme" | actionScheme="ActionScheme" |
		//cloningScheme="CloningScheme"
		public Alternatives getAlternatives() { return cAlternatives; }

		//creationScheme="CreationScheme"
		public EnumLiteralDeclaration getCreationSchemeEnumLiteralDeclaration_0() { return cCreationSchemeEnumLiteralDeclaration_0; }

		//"CreationScheme"
		public Keyword getCreationSchemeCreationSchemeKeyword_0_0() { return cCreationSchemeCreationSchemeKeyword_0_0; }

		//deletionScheme="DeletionScheme"
		public EnumLiteralDeclaration getDeletionSchemeEnumLiteralDeclaration_1() { return cDeletionSchemeEnumLiteralDeclaration_1; }

		//"DeletionScheme"
		public Keyword getDeletionSchemeDeletionSchemeKeyword_1_0() { return cDeletionSchemeDeletionSchemeKeyword_1_0; }

		//actionScheme="ActionScheme"
		public EnumLiteralDeclaration getActionSchemeEnumLiteralDeclaration_2() { return cActionSchemeEnumLiteralDeclaration_2; }

		//"ActionScheme"
		public Keyword getActionSchemeActionSchemeKeyword_2_0() { return cActionSchemeActionSchemeKeyword_2_0; }

		//cloningScheme="CloningScheme"
		public EnumLiteralDeclaration getCloningSchemeEnumLiteralDeclaration_3() { return cCloningSchemeEnumLiteralDeclaration_3; }

		//"CloningScheme"
		public Keyword getCloningSchemeCloningSchemeKeyword_3_0() { return cCloningSchemeCloningSchemeKeyword_3_0; }
	}

	public class MSTYPEElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "MSTYPE");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cOwlEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cOwlOWLModelSlotKeyword_0_0 = (Keyword)cOwlEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cDiagEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cDiagDiagramModelSlotKeyword_1_0 = (Keyword)cDiagEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cEmfEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cEmfEMFModelSlotKeyword_2_0 = (Keyword)cEmfEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cVirtualEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cVirtualVirtualModelModelSlotKeyword_3_0 = (Keyword)cVirtualEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cXsdEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cXsdXSDModelSlotKeyword_4_0 = (Keyword)cXsdEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum MSTYPE:
		//	owl="OWLModelSlot" | diag="DiagramModelSlot" | emf="EMFModelSlot" | virtual="VirtualModelModelSlot" |
		//	xsd="XSDModelSlot";
		public EnumRule getRule() { return rule; }

		//owl="OWLModelSlot" | diag="DiagramModelSlot" | emf="EMFModelSlot" | virtual="VirtualModelModelSlot" | xsd="XSDModelSlot"
		public Alternatives getAlternatives() { return cAlternatives; }

		//owl="OWLModelSlot"
		public EnumLiteralDeclaration getOwlEnumLiteralDeclaration_0() { return cOwlEnumLiteralDeclaration_0; }

		//"OWLModelSlot"
		public Keyword getOwlOWLModelSlotKeyword_0_0() { return cOwlOWLModelSlotKeyword_0_0; }

		//diag="DiagramModelSlot"
		public EnumLiteralDeclaration getDiagEnumLiteralDeclaration_1() { return cDiagEnumLiteralDeclaration_1; }

		//"DiagramModelSlot"
		public Keyword getDiagDiagramModelSlotKeyword_1_0() { return cDiagDiagramModelSlotKeyword_1_0; }

		//emf="EMFModelSlot"
		public EnumLiteralDeclaration getEmfEnumLiteralDeclaration_2() { return cEmfEnumLiteralDeclaration_2; }

		//"EMFModelSlot"
		public Keyword getEmfEMFModelSlotKeyword_2_0() { return cEmfEMFModelSlotKeyword_2_0; }

		//virtual="VirtualModelModelSlot"
		public EnumLiteralDeclaration getVirtualEnumLiteralDeclaration_3() { return cVirtualEnumLiteralDeclaration_3; }

		//"VirtualModelModelSlot"
		public Keyword getVirtualVirtualModelModelSlotKeyword_3_0() { return cVirtualVirtualModelModelSlotKeyword_3_0; }

		//xsd="XSDModelSlot"
		public EnumLiteralDeclaration getXsdEnumLiteralDeclaration_4() { return cXsdEnumLiteralDeclaration_4; }

		//"XSDModelSlot"
		public Keyword getXsdXSDModelSlotKeyword_4_0() { return cXsdXSDModelSlotKeyword_4_0; }
	}

	public class VMTYPEElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "VMTYPE");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cDiagSpecEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cDiagSpecDiagramSpecificationKeyword_0_0 = (Keyword)cDiagSpecEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cVMEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cVMVirtualModelKeyword_1_0 = (Keyword)cVMEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum VMTYPE:
		//	DiagSpec="DiagramSpecification" | VM="VirtualModel";
		public EnumRule getRule() { return rule; }

		//DiagSpec="DiagramSpecification" | VM="VirtualModel"
		public Alternatives getAlternatives() { return cAlternatives; }

		//DiagSpec="DiagramSpecification"
		public EnumLiteralDeclaration getDiagSpecEnumLiteralDeclaration_0() { return cDiagSpecEnumLiteralDeclaration_0; }

		//"DiagramSpecification"
		public Keyword getDiagSpecDiagramSpecificationKeyword_0_0() { return cDiagSpecDiagramSpecificationKeyword_0_0; }

		//VM="VirtualModel"
		public EnumLiteralDeclaration getVMEnumLiteralDeclaration_1() { return cVMEnumLiteralDeclaration_1; }

		//"VirtualModel"
		public Keyword getVMVirtualModelKeyword_1_0() { return cVMVirtualModelKeyword_1_0; }
	}

	public class PRTYPEElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "PRTYPE");
		private final EnumLiteralDeclaration cIndividualEnumLiteralDeclaration = (EnumLiteralDeclaration)rule.eContents().get(1);
		private final Keyword cIndividualIndividualKeyword_0 = (Keyword)cIndividualEnumLiteralDeclaration.eContents().get(0);
		
		//enum PRTYPE:
		//	Individual;
		public EnumRule getRule() { return rule; }

		//Individual
		public EnumLiteralDeclaration getIndividualEnumLiteralDeclaration() { return cIndividualEnumLiteralDeclaration; }

		//"Individual"
		public Keyword getIndividualIndividualKeyword_0() { return cIndividualIndividualKeyword_0; }
	}
	
	private ViewDefElements pViewDef;
	private VirtualModelElements pVirtualModel;
	private ModelSlotElements pModelSlot;
	private EditionPatternElements pEditionPattern;
	private PatternRoleElements pPatternRole;
	private EditionSchemeElements pEditionScheme;
	private EditionSchemeTypeElements unknownRuleEditionSchemeType;
	private ParameterElements pParameter;
	private EditionActionElements pEditionAction;
	private BuiltInActionElements pBuiltInAction;
	private DeclarePatternRoleElements pDeclarePatternRole;
	private DeleteActionElements pDeleteAction;
	private MSTYPEElements unknownRuleMSTYPE;
	private VMTYPEElements unknownRuleVMTYPE;
	private PRTYPEElements unknownRulePRTYPE;
	private TerminalRule tBOOL;
	private TerminalRule tURISTRING;
	private TerminalRule tURI;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public FMLGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl.FML".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//ViewDef:
	//	"ViewDefinition" name=ID "uri"+ "="+ uri=URISTRING "{" elements+=VirtualModel* "}";
	public ViewDefElements getViewDefAccess() {
		return (pViewDef != null) ? pViewDef : (pViewDef = new ViewDefElements());
	}
	
	public ParserRule getViewDefRule() {
		return getViewDefAccess().getRule();
	}

	//VirtualModel:
	//	"VirtualModel" name=ID ("type"+ "="+ type=VMTYPE)? "uri"+ "="+ uri=URISTRING "{" ModelSlots+=ModelSlot*
	//	EditionPatterns+=EditionPattern* "}";
	public VirtualModelElements getVirtualModelAccess() {
		return (pVirtualModel != null) ? pVirtualModel : (pVirtualModel = new VirtualModelElements());
	}
	
	public ParserRule getVirtualModelRule() {
		return getVirtualModelAccess().getRule();
	}

	//ModelSlot:
	//	"ModelSlot" name=ID "type"+ "="+ type=MSTYPE "conformTo"+ "="+ uri=URISTRING "required"+ "="+ required=BOOL
	//	"readOnly"+ "="+ readOnly=BOOL ";";
	public ModelSlotElements getModelSlotAccess() {
		return (pModelSlot != null) ? pModelSlot : (pModelSlot = new ModelSlotElements());
	}
	
	public ParserRule getModelSlotRule() {
		return getModelSlotAccess().getRule();
	}

	//EditionPattern:
	//	"EditionPattern" name=ID ("extends" superEditionPattern=[EditionPattern])? "{" patternRoles+=PatternRole*
	//	editionSchemes+=EditionScheme* "}";
	public EditionPatternElements getEditionPatternAccess() {
		return (pEditionPattern != null) ? pEditionPattern : (pEditionPattern = new EditionPatternElements());
	}
	
	public ParserRule getEditionPatternRule() {
		return getEditionPatternAccess().getRule();
	}

	//PatternRole:
	//	"PatternRole" name=ID "as" type=PRTYPE "conformTo" modelElement=STRING "from" modelSlot=[ModelSlot] ";";
	public PatternRoleElements getPatternRoleAccess() {
		return (pPatternRole != null) ? pPatternRole : (pPatternRole = new PatternRoleElements());
	}
	
	public ParserRule getPatternRoleRule() {
		return getPatternRoleAccess().getRule();
	}

	//EditionScheme:
	//	editionSchemeType=EditionSchemeType name=ID "(" (parameter+=Parameter+ (","+ parameter+=Parameter)*)? ")" "{"
	//	editionAction+=EditionAction* "}";
	public EditionSchemeElements getEditionSchemeAccess() {
		return (pEditionScheme != null) ? pEditionScheme : (pEditionScheme = new EditionSchemeElements());
	}
	
	public ParserRule getEditionSchemeRule() {
		return getEditionSchemeAccess().getRule();
	}

	//enum EditionSchemeType:
	//	creationScheme="CreationScheme" | deletionScheme="DeletionScheme" | actionScheme="ActionScheme" |
	//	cloningScheme="CloningScheme";
	public EditionSchemeTypeElements getEditionSchemeTypeAccess() {
		return (unknownRuleEditionSchemeType != null) ? unknownRuleEditionSchemeType : (unknownRuleEditionSchemeType = new EditionSchemeTypeElements());
	}
	
	public EnumRule getEditionSchemeTypeRule() {
		return getEditionSchemeTypeAccess().getRule();
	}

	//Parameter:
	//	widget=PRTYPE ":" editionPattern=[EditionPattern] name=ID;
	public ParameterElements getParameterAccess() {
		return (pParameter != null) ? pParameter : (pParameter = new ParameterElements());
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}

	//EditionAction:
	//	BuiltInAction;
	public EditionActionElements getEditionActionAccess() {
		return (pEditionAction != null) ? pEditionAction : (pEditionAction = new EditionActionElements());
	}
	
	public ParserRule getEditionActionRule() {
		return getEditionActionAccess().getRule();
	}

	//BuiltInAction:
	//	DeclarePatternRole | DeleteAction;
	public BuiltInActionElements getBuiltInActionAccess() {
		return (pBuiltInAction != null) ? pBuiltInAction : (pBuiltInAction = new BuiltInActionElements());
	}
	
	public ParserRule getBuiltInActionRule() {
		return getBuiltInActionAccess().getRule();
	}

	//DeclarePatternRole:
	//	patternRole=[PatternRole] "=" "parameters" "." parameter=[Parameter] ";";
	public DeclarePatternRoleElements getDeclarePatternRoleAccess() {
		return (pDeclarePatternRole != null) ? pDeclarePatternRole : (pDeclarePatternRole = new DeclarePatternRoleElements());
	}
	
	public ParserRule getDeclarePatternRoleRule() {
		return getDeclarePatternRoleAccess().getRule();
	}

	//DeleteAction:
	//	"delete" patternRole=[PatternRole] ";";
	public DeleteActionElements getDeleteActionAccess() {
		return (pDeleteAction != null) ? pDeleteAction : (pDeleteAction = new DeleteActionElements());
	}
	
	public ParserRule getDeleteActionRule() {
		return getDeleteActionAccess().getRule();
	}

	//enum MSTYPE:
	//	owl="OWLModelSlot" | diag="DiagramModelSlot" | emf="EMFModelSlot" | virtual="VirtualModelModelSlot" |
	//	xsd="XSDModelSlot";
	public MSTYPEElements getMSTYPEAccess() {
		return (unknownRuleMSTYPE != null) ? unknownRuleMSTYPE : (unknownRuleMSTYPE = new MSTYPEElements());
	}
	
	public EnumRule getMSTYPERule() {
		return getMSTYPEAccess().getRule();
	}

	//enum VMTYPE:
	//	DiagSpec="DiagramSpecification" | VM="VirtualModel";
	public VMTYPEElements getVMTYPEAccess() {
		return (unknownRuleVMTYPE != null) ? unknownRuleVMTYPE : (unknownRuleVMTYPE = new VMTYPEElements());
	}
	
	public EnumRule getVMTYPERule() {
		return getVMTYPEAccess().getRule();
	}

	//enum PRTYPE:
	//	Individual;
	public PRTYPEElements getPRTYPEAccess() {
		return (unknownRulePRTYPE != null) ? unknownRulePRTYPE : (unknownRulePRTYPE = new PRTYPEElements());
	}
	
	public EnumRule getPRTYPERule() {
		return getPRTYPEAccess().getRule();
	}

	//terminal BOOL:
	//	"true" | "false";
	public TerminalRule getBOOLRule() {
		return (tBOOL != null) ? tBOOL : (tBOOL = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "BOOL"));
	} 

	//terminal URISTRING:
	//	"\""+ URI+ "\"";
	public TerminalRule getURISTRINGRule() {
		return (tURISTRING != null) ? tURISTRING : (tURISTRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "URISTRING"));
	} 

	//// Query
	//terminal URI:
	//	"a".."z"+ // Protocol
	//	"://" ("0".."9"+ "." "0".."9"+ "." "0".."9"+ "." "0".."9"+ // Hostname
	//	| ("a".."z" | "A".."Z") ("a".."z" | "A".."Z" | "0".."9" | "$" | "-" | "_" | "\\" ("0".."9" | "a".."f" | "A".."F")
	//	("0".."9" | "a".."f" | "A".."F") | "%" "0".."9" "0".."9")* ("." ("a".."z" | "A".."Z") ("a".."z" | "A".."Z" | "0".."9"
	//	| "$" | "-" | "_" | "\\" ("0".."9" | "a".."f" | "A".."F") ("0".."9" | "a".."f" | "A".."F") | "%" "0".."9"
	//	"0".."9")*)*) (":" "0".."9"+)? // Portnumber
	//	("/" ("a".."z" | "A".."Z" | "0".."9" | "$" | "-" | "_" | "~" | "+" | "." | "\\" ("0".."9" | "a".."f" | "A".."F")
	//	("0".."9" | "a".."f" | "A".."F") | "%" "0".."9" "0".."9")*)* // Path
	//	("?" ("a".."z" | "A".."Z" | "0".."9" | "$" | "-" | "_" | "=" | "&" | ";" | "\\" ("0".."9" | "a".."f" | "A".."F")
	//	("0".."9" | "a".."f" | "A".."F") | "%" "0".."9" "0".."9")+ ("+" ("a".."z" | "A".."Z" | "0".."9" | "$" | "-" | "_" |
	//	"=" | "&" | ";" | "\\" ("0".."9" | "a".."f" | "A".."F") ("0".."9" | "a".."f" | "A".."F") | "%" "0".."9"
	//	"0".."9")+)*)?;
	public TerminalRule getURIRule() {
		return (tURI != null) ? tURI : (tURI = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "URI"));
	} 

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
